version: '3.8'

services:
  # Base de datos MySQL
  mysql:
    image: mysql:8.0
    container_name: socrates_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: socrates
      MYSQL_USER: socrates
      MYSQL_PASSWORD: devpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  # Redis para Celery
  redis:
    image: redis:7-alpine
    container_name: socrates_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Backend Django
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: socrates_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - MYSQL_HOST=mysql
      - MYSQL_DATABASE=socrates
      - MYSQL_USER=socrates
      - MYSQL_PASSWORD=devpassword
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173
    volumes:
      - ./backend:/app
      - media_files:/app/media
    depends_on:
      - mysql
      - redis
    command: >
      sh -c "
        python manage.py makemigrations &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python manage.py runserver 0.0.0.0:8000
      "

  # Celery Worker
  celery_worker:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: socrates_celery_worker
    restart: unless-stopped
    environment:
      - DEBUG=True
      - MYSQL_HOST=mysql
      - MYSQL_DATABASE=socrates
      - MYSQL_USER=socrates
      - MYSQL_PASSWORD=devpassword
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
    volumes:
      - ./backend:/app
    depends_on:
      - mysql
      - redis
    command: celery -A config worker -l info

  # Celery Beat (Scheduler)
  celery_beat:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: socrates_celery_beat
    restart: unless-stopped
    environment:
      - DEBUG=True
      - MYSQL_HOST=mysql
      - MYSQL_DATABASE=socrates
      - MYSQL_USER=socrates
      - MYSQL_PASSWORD=devpassword
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
    volumes:
      - ./backend:/app
    depends_on:
      - mysql
      - redis
    command: celery -A config beat -l info

  # Frontend React
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: socrates_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE_URL=http://localhost:8000/api/v1
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: npm run dev -- --host 0.0.0.0 --port 3000

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  media_files:
    driver: local

networks:
  default:
    name: socrates_network